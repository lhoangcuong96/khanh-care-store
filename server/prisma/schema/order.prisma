model Order {
    id                  String              @id @default(auto()) @map("_id") @db.ObjectId // MongoDB uses ObjectId @db.ObjectId
    orderCode           String              @unique
    accountId           String              @db.ObjectId
    account             Account             @relation(fields: [accountId], references: [id], onDelete: Cascade)
    items               OrderItem[]
    subtotal            Float
    totalAmount         Float
    deliveryInformation DeliveryInformation
    status              OrderStatus         @default(PENDING)
    createdAt           DateTime            @default(now())
    updatedAt           DateTime            @updatedAt
}

type DeliveryInformation {
    recipientFullname    String
    recipientPhoneNumber String
    recipientEmail       String?
    recipientAddress     ShippingAddress
    shippingFee          Float
    // shippingDate         DateTime?
    // shippingPeriod       String?
    note                 String?
}

type ProductVariantInfo {
    id    String?
    name  String?
    price Float?
}

type OrderItem {
    productId       String
    productQuantity Int
    productPrice    Float
    productImage    String
    productName     String
    productVariant  ProductVariantInfo?
}

enum OrderStatus {
    PENDING
    PROCESSING
    SHIPPED // Order has been dispatched and is on the way.
    DELIVERED // Order has been delivered to the customer.
    CANCELLED // Order has been cancelled by the customer.
    COMPLETED // Order has been completed.
    FAILED // Order has failed.
    REFUNDED // Order has been refunded.
    RETURNED // Order has been returned.
}
