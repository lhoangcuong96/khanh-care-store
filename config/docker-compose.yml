services:
  frontend:
    image: kcarestore/kcs-client:latest
    container_name: frontend
    ports:
      - "3000:3000"
    networks:
      - app-network

  backend:
    image: kcarestore/kcs-server:latest
    container_name: backend
    ports:
      - "4000:4000"
    networks:
      - app-network
    environment:
      REDIS_HOST: redis-stack
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""
    depends_on:
      - redis-stack

  redis-stack:
    image: redis/redis-stack:latest
    container_name: redis-stack
    restart: unless-stopped
    ports:
      - "6379:6379"
      - "8001:8001"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    environment:
      REDIS_ARGS: "--save 60 1 --loglevel warning"

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    restart: always
    networks:
      - app-network
    depends_on:
      - frontend
      - backend

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: /bin/sh -c # The certonly command runs once for obtaining the certificate
    # chỉ tạo 1 certificate duy nhất cho cả 2 domain
    command: >
      "certbot certonly --staging --webroot  --webroot-path=/var/www/certbot  --email lhoangcuong1999@gmail.com  --agree-tos  --no-eff-email  -d khanhstore.com -d api.khanhstore.com --staging --non-interactive"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis_data:
  certs:
    driver: local
