"use client";

import { useState } from "react";
import Link from "next/link";
import { ChevronDown, ChevronRight } from "lucide-react";
import { cn } from "@/lib/utils";
import { Card } from "@/components/ui/card";
import Image from "next/image";

// Mega menu data structure
const megaMenuData: Record<
  string,
  { columns: { title: string; items: { name: string; href: string }[] }[] }
> = {
  "may-rua-xe": {
    columns: [
      {
        title: "Nhu c·∫ßu",
        items: [
          { name: "M√°y r·ª≠a xe t·∫£i", href: "/may-rua-xe/tai" },
          { name: "M√°y r·ª≠a xe m√°y", href: "/may-rua-xe/may" },
          { name: "M√°y r·ª≠a xe √¥ t√¥", href: "/may-rua-xe/o-to" },
          { name: "M√°y cao √°p gi√° r·∫ª", href: "/may-rua-xe/gia-re" },
          { name: "M√°y r·ª≠a xe t·ª± ƒë·ªông", href: "/may-rua-xe/tu-dong" },
          { name: "M√°y r·ª≠a xe gia ƒë√¨nh", href: "/may-rua-xe/gia-dinh" },
          { name: "M√°y r·ª≠a xe Italy / √ù", href: "/may-rua-xe/italy" },
          { name: "M√°y r·ª≠a xe Nh·∫≠t b√£i", href: "/may-rua-xe/nhat-bai" },
          { name: "M√°y gi·∫∑t n·ªìi b√°o hi·ªÉm", href: "/may-rua-xe/giat-noi" },
          { name: "M√°y r·ª≠a xe c√¥ng nghi·ªáp", href: "/may-rua-xe/cong-ngiep" },
        ],
      },
      {
        title: "T√≠nh nƒÉng",
        items: [
          { name: "M√°y r·ª≠a xe mini", href: "/may-rua-xe/mini" },
          { name: "M√°y r·ª≠a xe cao √°p", href: "/may-rua-xe/cao-ap" },
          { name: "M√°y r·ª≠a xe d√¢y d√†i", href: "/may-rua-xe/day-dai" },
          { name: "M√°y r·ª≠a xe c·∫ßm tay", href: "/may-rua-xe/cam-tay" },
          { name: "M√°y r·ª≠a xe treo t∆∞·ªùng", href: "/may-rua-xe/treo-tuong" },
          { name: "M√°y r·ª≠a xe n∆∞·ªõc n√≥ng", href: "/may-rua-xe/nuoc-nong" },
          { name: "M√°y r·ª≠a xe si√™u cao √°p", href: "/may-rua-xe/sieu-cao-ap" },
          {
            name: "M√°y r·ª≠a xe h∆°i n∆∞·ªõc n√≥ng",
            href: "/may-rua-xe/hoi-nuoc-nong",
          },
          {
            name: "M√°y r·ª≠a xe ch·∫°y xƒÉng d·∫ßu",
            href: "/may-rua-xe/chay-xang-dau",
          },
        ],
      },
      {
        title: "Th∆∞∆°ng hi·ªáu",
        items: [
          { name: "M√°y r·ª≠a xe Vjet", href: "/may-rua-xe/vjet" },
          { name: "M√°y r·ª≠a xe Urali", href: "/may-rua-xe/urali" },
          { name: "M√°y r·ª≠a xe Projet", href: "/may-rua-xe/projet" },
          { name: "Th∆∞∆°ng hi·ªáu kh√°c", href: "/may-rua-xe/thuong-hieu-khac" },
          { name: "M√°y r·ª≠a xe Lutian", href: "/may-rua-xe/lutian" },
          { name: "M√°y r·ª≠a xe Kokoro", href: "/may-rua-xe/kokoro" },
          { name: "M√°y r·ª≠a xe ANNOVI", href: "/may-rua-xe/annovi" },
          { name: "M√°y r·ª≠a xe Mazzoni", href: "/may-rua-xe/mazzoni" },
          { name: "M√°y r·ª≠a xe To√†n Ph√°t", href: "/may-rua-xe/toan-phat" },
        ],
      },
      {
        title: "Ph·ª• ki·ªán theo c√πng",
        items: [
          { name: "M√¥ t∆° ƒëi·ªán", href: "/phu-kien/mo-to-dien" },
          { name: "D√¢y r·ª≠a xe", href: "/phu-kien/day-rua-xe" },
          { name: "S√∫ng r·ª≠a xe", href: "/phu-kien/sung-rua-xe" },
          { name: "Ph·ª• ki·ªán s√∫ng", href: "/phu-kien/phu-kien-sung" },
          { name: "ƒê·∫ßu b√©c r·ª≠a xe", href: "/phu-kien/dau-bec-rua-xe" },
          { name: "ƒê·∫ßu b∆°m r·ª≠a xe", href: "/phu-kien/dau-bom-rua-xe" },
          { name: "Ph·ª• ki·ªán v·ªá ƒëi·ªán", href: "/phu-kien/phu-kien-ve-dien" },
          { name: "ƒê·∫ßu b∆°m Oshima", href: "/phu-kien/dau-bom-oshima" },
          { name: "Ph·ª• ki·ªán ƒë·∫ßu b∆°m", href: "/phu-kien/phu-kien-dau-bom" },
          {
            name: "Ph·ª• ki·ªán ƒë·∫ßu m√°y r·ª≠a xe",
            href: "/phu-kien/phu-kien-dau-may-rua-xe",
          },
          {
            name: "Ph·ª• ki·ªán m√°y r·ª≠a xe b·∫±ng pin",
            href: "/phu-kien/phu-kien-may-rua-xe-bang-pin",
          },
        ],
      },
    ],
  },
  // Add other mega menus for different categories as needed
};

const categories = [
  {
    name: "Dung d·ªãch r·ª≠a xe Biovi",
    href: "/dung-dich-rua-xe-biovi",
    icon: "/images/icons/nuoc-rua-xe-100x100.png",
    key: "dung-dich-rua-xe-biovi",
    children: [
      { name: "B·ªçt tuy·∫øt c√≥ ch·∫°m", href: "/bot-tuyet-co-cham" },
      { name: "B·ªçt tuy·∫øt kh√¥ng ch·∫°m", href: "" },
      { name: "Dung d·ªãch l√†m s·∫°ch b·ªÅ m·∫∑t kim lo·∫°i", href: "" },
      { name: "S·∫£n ph·∫©m v·ªá sinh chi ti·∫øt", href: "" },
      { name: "S·∫£n ph·∫©m d∆∞·ª°ng & ph·ª•c h·ªìi", href: "" },
      { name: "Dung d·ªãch x√¥ng kh√≥i kh·ª≠ m√πi", href: "" },
    ],
  },
  {
    name: "Dung d·ªãch r·ª≠a xe Ekokemika",
    href: "/dung-dich-rua-xe-ekokemika",
    icon: "/images/icons/nuoc-rua-xe-100x100.png",
    key: "dung-dich-rua-xe-ekokemika",
    children: [
      { name: "B·ªçt tuy·∫øt c√≥ ch·∫°m", href: "/bot-tuyet-co-cham" },
      { name: "B·ªçt tuy·∫øt kh√¥ng ch·∫°m", href: "" },
      { name: "Dung d·ªãch l√†m s·∫°ch b·ªÅ m·∫∑t kim lo·∫°i", href: "" },
      { name: "S·∫£n ph·∫©m v·ªá sinh chi ti·∫øt", href: "" },
      { name: "S·∫£n ph·∫©m d∆∞·ª°ng & ph·ª•c h·ªìi", href: "" },
      { name: "Dung d·ªãch x√¥ng kh√≥i kh·ª≠ m√πi", href: "" },
    ],
  },
  {
    name: "D·ª•ng c·ª• r·ª≠a & chƒÉm s√≥c xe",
    href: "/thiet-bi-nang-ha",
    icon: "/images/icons/thiet-bi-phong-son-100x100.png",
    key: "thiet-bi-nang-ha",
    children: [
      {
        name: "KhƒÉn",
        href: "/may-hut-bui-cong-nghiep",
      },
      { name: "C·ªç & b√†n ch·∫£i", href: "/may-nen-khi" },
      { name: "B√¨nh x·ªãt c·∫ßm tay", href: "/may-hut-bui-o-to" },
      { name: "Bao tay r·ª≠a xe", href: "/may-hut-bui-gia-dinh" },
      { name: "B√¨nh x·ªãt t·∫°o b·ªçt tuy·∫øt", href: "/may-hut-bui-mini" },
      { name: "D·ª•ng c·ª• kh√°c", href: "/may-hut-bui-cam-tay" },
    ],
  },
  {
    name: "Thi·∫øt b·ªã r·ª≠a xe",
    href: "/binh-bot-tuyet",
    icon: "/images/icons/dung-cu-rua-xe-100x100.png",
    key: "binh-bot-tuyet",
    children: [
      { name: "C·∫ßu n√¢ng r·ª≠a xe", href: "/may-rua-xe" },
      { name: "M√°y r·ª≠a xe ", href: "/may-nen-khi" },
      { name: "M√°y h√∫t b·ª•i", href: "/may-hut-bui" },
      { name: "Rulo t·ª± r√∫t", href: "/may-bom-hoi" },
      { name: "Thi·∫øt b·ªã kh√°c", href: "/may-hut-bui-cong-nghiep" },
    ],
  },
];

export default function CategorySidebar() {
  const [isOpen, setIsOpen] = useState(true);
  const [hoveredCategory, setHoveredCategory] = useState<string | null>(null);

  const handleMouseEnter = (key: string) => {
    setHoveredCategory(key);
  };

  const handleMouseLeave = () => {
    setHoveredCategory(null);
  };

  console.log(
    "Hovered category:",
    megaMenuData[hoveredCategory as keyof typeof megaMenuData]
  );

  return (
    <Card className="rounded-md bg-white">
      <button
        onClick={() => setIsOpen(!isOpen)}
        className="flex items-center justify-between w-full p-3 bg-orange-50 text-orange-500 font-medium border-b"
      >
        <div className="flex items-center gap-2">
          <span className="text-xl">üìã</span>
          <span>Danh m·ª•c</span>
        </div>
        <ChevronDown
          className={cn(
            "h-5 w-5 transition-transform",
            isOpen ? "transform rotate-180" : ""
          )}
        />
      </button>

      {isOpen && (
        <ul className="divide-y">
          {categories.map((category) => (
            <li
              key={category.href}
              onMouseEnter={() => handleMouseEnter(category.key)}
              onMouseLeave={handleMouseLeave}
              className="relative group"
            >
              <Link
                href={category.href}
                className={cn(
                  "flex items-center justify-between p-3 text-sm hover:bg-orange-500 hover:text-white transition-colors",
                  hoveredCategory === category.key
                    ? "bg-orange-500 text-white"
                    : "text-gray-700"
                )}
              >
                <div className="flex items-center gap-2">
                  <Image
                    src={category.icon}
                    alt={category.name}
                    width={20}
                    height={20}
                  ></Image>
                  <span>{category.name}</span>
                </div>
                <ChevronRight className="h-4 w-4" />
              </Link>

              {/* Mega Menu */}
              <div className="hidden group-hover:flex flex-col gap-4 absolute left-full top-0 z-50 bg-white shadow-lg border rounded-md p-6 min-w-[300px]">
                {category.children.length > 0 &&
                  category.children.map((child) => (
                    <Link
                      href={child.href}
                      className="text-sm text-gray-600 hover:text-orange-500"
                      key={child.name}
                    >
                      {child.name}
                    </Link>
                  ))}
              </div>
            </li>
          ))}
        </ul>
      )}
    </Card>
  );
}
